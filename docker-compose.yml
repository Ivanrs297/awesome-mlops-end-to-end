version: "3.8"

services:
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.21.2
    container_name: mibici_mlflow
    ports:
      - "5000:5000"
    volumes:
      - mlflow_data:/mlflow
    command: >
      /bin/sh -c "apt-get update && apt-get install -y curl &&
                  mlflow ui --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow/mlflow.db"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 10s  
      retries: 3
      start_period: 60s
    restart: on-failure

  training:
    build:
      context: .
      dockerfile: Dockerfile.train
    container_name: training_service
    depends_on:
      mlflow:
        condition: service_healthy
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    command: >
      /bin/sh -c "python MLFlow/train.py && touch /training_done/done"
    volumes:
      - training_done:/training_done
    restart: "no"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mibici_api
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - POSTGRES_HOST=postgres
    depends_on:
      mlflow:
        condition: service_healthy
      training:
        condition: service_started
    volumes:
      - training_done:/training_done
    entrypoint: ["/bin/sh", "-c", "while [ ! -f /training_done/done ]; do echo 'Waiting for training to complete...'; sleep 2; done; exec uvicorn api.app:app --host 0.0.0.0 --port 8000"]
    restart: always

volumes:
  mlflow_data:
  training_done:
